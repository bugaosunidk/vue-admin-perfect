(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3baa9536"],{3604:function(e,t,i){"use strict";i.r(t);var n=i("7a23"),s=Object.defineProperty,a=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,h=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,t,i)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,c=(e,t)=>{for(var i in t||(t={}))h.call(t,i)&&p(e,i,t[i]);if(o)for(var i of o(t))l.call(t,i)&&p(e,i,t[i]);return e},d=(e,t)=>a(e,r(t)),u=(e,t)=>{var i={};for(var n in e)h.call(e,n)&&t.indexOf(n)<0&&(i[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&l.call(e,n)&&(i[n]=e[n]);return i};const m={name:"splitpanes",emits:["ready","resize","resized","pane-click","pane-maximize","pane-add","pane-remove","splitter-click"],props:{horizontal:{type:Boolean},pushOtherPanes:{type:Boolean,default:!0},dblClickSplitter:{type:Boolean,default:!0},rtl:{type:Boolean,default:!1},firstSplitter:{type:Boolean}},provide(){return{requestUpdate:this.requestUpdate,onPaneAdd:this.onPaneAdd,onPaneRemove:this.onPaneRemove,onPaneClick:this.onPaneClick}},data:()=>({container:null,ready:!1,panes:[],touch:{mouseDown:!1,dragging:!1,activeSplitter:null},splitterTaps:{splitter:null,timeoutId:null}}),computed:{panesCount(){return this.panes.length},indexedPanes(){return this.panes.reduce((e,t)=>(e[t.id]=t)&&e,{})}},methods:{updatePaneComponents(){this.panes.forEach(e=>{e.update&&e.update({[this.horizontal?"height":"width"]:this.indexedPanes[e.id].size+"%"})})},bindEvents(){document.addEventListener("mousemove",this.onMouseMove,{passive:!1}),document.addEventListener("mouseup",this.onMouseUp),"ontouchstart"in window&&(document.addEventListener("touchmove",this.onMouseMove,{passive:!1}),document.addEventListener("touchend",this.onMouseUp))},unbindEvents(){document.removeEventListener("mousemove",this.onMouseMove,{passive:!1}),document.removeEventListener("mouseup",this.onMouseUp),"ontouchstart"in window&&(document.removeEventListener("touchmove",this.onMouseMove,{passive:!1}),document.removeEventListener("touchend",this.onMouseUp))},onMouseDown(e,t){this.bindEvents(),this.touch.mouseDown=!0,this.touch.activeSplitter=t},onMouseMove(e){this.touch.mouseDown&&(e.preventDefault(),this.touch.dragging=!0,this.calculatePanesSize(this.getCurrentMouseDrag(e)),this.$emit("resize",this.panes.map(e=>({min:e.min,max:e.max,size:e.size}))))},onMouseUp(){this.touch.dragging&&this.$emit("resized",this.panes.map(e=>({min:e.min,max:e.max,size:e.size}))),this.touch.mouseDown=!1,setTimeout(()=>{this.touch.dragging=!1,this.unbindEvents()},100)},onSplitterClick(e,t){"ontouchstart"in window&&(e.preventDefault(),this.dblClickSplitter&&(this.splitterTaps.splitter===t?(clearTimeout(this.splitterTaps.timeoutId),this.splitterTaps.timeoutId=null,this.onSplitterDblClick(e,t),this.splitterTaps.splitter=null):(this.splitterTaps.splitter=t,this.splitterTaps.timeoutId=setTimeout(()=>{this.splitterTaps.splitter=null},500)))),this.touch.dragging||this.$emit("splitter-click",this.panes[t])},onSplitterDblClick(e,t){let i=0;this.panes=this.panes.map((e,n)=>(e.size=n===t?e.max:e.min,n!==t&&(i+=e.min),e)),this.panes[t].size-=i,this.$emit("pane-maximize",this.panes[t])},onPaneClick(e,t){this.$emit("pane-click",this.indexedPanes[t])},getCurrentMouseDrag(e){const t=this.container.getBoundingClientRect(),{clientX:i,clientY:n}="ontouchstart"in window&&e.touches?e.touches[0]:e;return{x:i-t.left,y:n-t.top}},getCurrentDragPercentage(e){e=e[this.horizontal?"y":"x"];const t=this.container[this.horizontal?"clientHeight":"clientWidth"];return this.rtl&&!this.horizontal&&(e=t-e),100*e/t},calculatePanesSize(e){const t=this.touch.activeSplitter;let i={prevPanesSize:this.sumPrevPanesSize(t),nextPanesSize:this.sumNextPanesSize(t),prevReachedMinPanes:0,nextReachedMinPanes:0};const n=0+(this.pushOtherPanes?0:i.prevPanesSize),s=100-(this.pushOtherPanes?0:i.nextPanesSize),a=Math.max(Math.min(this.getCurrentDragPercentage(e),s),n);let r=[t,t+1],o=this.panes[r[0]]||null,h=this.panes[r[1]]||null;const l=o.max<100&&a>=o.max+i.prevPanesSize,p=h.max<100&&a<=100-(h.max+this.sumNextPanesSize(t+1));if(l||p)l?(o.size=o.max,h.size=Math.max(100-o.max-i.prevPanesSize-i.nextPanesSize,0)):(o.size=Math.max(100-h.max-i.prevPanesSize-this.sumNextPanesSize(t+1),0),h.size=h.max);else{if(this.pushOtherPanes){const e=this.doPushOtherPanes(i,a);if(!e)return;({sums:i,panesToResize:r}=e),o=this.panes[r[0]]||null,h=this.panes[r[1]]||null}null!==o&&(o.size=Math.min(Math.max(a-i.prevPanesSize-i.prevReachedMinPanes,o.min),o.max)),null!==h&&(h.size=Math.min(Math.max(100-a-i.nextPanesSize-i.nextReachedMinPanes,h.min),h.max))}},doPushOtherPanes(e,t){const i=this.touch.activeSplitter,n=[i,i+1];return t<e.prevPanesSize+this.panes[n[0]].min&&(n[0]=this.findPrevExpandedPane(i).index,e.prevReachedMinPanes=0,n[0]<i&&this.panes.forEach((t,s)=>{s>n[0]&&s<=i&&(t.size=t.min,e.prevReachedMinPanes+=t.min)}),e.prevPanesSize=this.sumPrevPanesSize(n[0]),void 0===n[0])?(e.prevReachedMinPanes=0,this.panes[0].size=this.panes[0].min,this.panes.forEach((t,n)=>{n>0&&n<=i&&(t.size=t.min,e.prevReachedMinPanes+=t.min)}),this.panes[n[1]].size=100-e.prevReachedMinPanes-this.panes[0].min-e.prevPanesSize-e.nextPanesSize,null):t>100-e.nextPanesSize-this.panes[n[1]].min&&(n[1]=this.findNextExpandedPane(i).index,e.nextReachedMinPanes=0,n[1]>i+1&&this.panes.forEach((t,s)=>{s>i&&s<n[1]&&(t.size=t.min,e.nextReachedMinPanes+=t.min)}),e.nextPanesSize=this.sumNextPanesSize(n[1]-1),void 0===n[1])?(e.nextReachedMinPanes=0,this.panes[this.panesCount-1].size=this.panes[this.panesCount-1].min,this.panes.forEach((t,n)=>{n<this.panesCount-1&&n>=i+1&&(t.size=t.min,e.nextReachedMinPanes+=t.min)}),this.panes[n[0]].size=100-e.prevPanesSize-e.nextReachedMinPanes-this.panes[this.panesCount-1].min-e.nextPanesSize,null):{sums:e,panesToResize:n}},sumPrevPanesSize(e){return this.panes.reduce((t,i,n)=>t+(n<e?i.size:0),0)},sumNextPanesSize(e){return this.panes.reduce((t,i,n)=>t+(n>e+1?i.size:0),0)},findPrevExpandedPane(e){const t=[...this.panes].reverse().find(t=>t.index<e&&t.size>t.min);return t||{}},findNextExpandedPane(e){const t=this.panes.find(t=>t.index>e+1&&t.size>t.min);return t||{}},checkSplitpanesNodes(){const e=Array.from(this.container.children);e.forEach(e=>{const t=e.classList.contains("splitpanes__pane"),i=e.classList.contains("splitpanes__splitter");if(!t&&!i)return e.parentNode.removeChild(e),void console.warn("Splitpanes: Only <pane> elements are allowed at the root of <splitpanes>. One of your DOM nodes was removed.")})},addSplitter(e,t,i=!1){const n=e-1,s=document.createElement("div");s.classList.add("splitpanes__splitter"),i||(s.onmousedown=e=>this.onMouseDown(e,n),"undefined"!==typeof window&&"ontouchstart"in window&&(s.ontouchstart=e=>this.onMouseDown(e,n)),s.onclick=e=>this.onSplitterClick(e,n+1)),this.dblClickSplitter&&(s.ondblclick=e=>this.onSplitterDblClick(e,n+1)),t.parentNode.insertBefore(s,t)},removeSplitter(e){e.onmousedown=void 0,e.onclick=void 0,e.ondblclick=void 0,e.parentNode.removeChild(e)},redoSplitters(){const e=Array.from(this.container.children);e.forEach(e=>{e.className.includes("splitpanes__splitter")&&this.removeSplitter(e)});let t=0;e.forEach(e=>{e.className.includes("splitpanes__pane")&&(!t&&this.firstSplitter?this.addSplitter(t,e,!0):t&&this.addSplitter(t,e),t++)})},requestUpdate(e){var t=e,{target:i}=t,n=u(t,["target"]);const s=this.indexedPanes[i._.uid];Object.entries(n).forEach(([e,t])=>s[e]=t)},onPaneAdd(e){let t=-1;Array.from(e.$el.parentNode.children).some(i=>(i.className.includes("splitpanes__pane")&&t++,i===e.$el));const i=parseFloat(e.minSize),n=parseFloat(e.maxSize);this.panes.splice(t,0,{id:e._.uid,index:t,min:isNaN(i)?0:i,max:isNaN(n)?100:n,size:null===e.size?null:parseFloat(e.size),givenSize:e.size,update:e.update}),this.panes.forEach((e,t)=>e.index=t),this.ready&&this.$nextTick(()=>{this.redoSplitters(),this.resetPaneSizes({addedPane:this.panes[t]}),this.$emit("pane-add",{index:t,panes:this.panes.map(e=>({min:e.min,max:e.max,size:e.size}))})})},onPaneRemove(e){const t=this.panes.findIndex(t=>t.id===e._.uid),i=this.panes.splice(t,1)[0];this.panes.forEach((e,t)=>e.index=t),this.$nextTick(()=>{this.redoSplitters(),this.resetPaneSizes({removedPane:d(c({},i),{index:t})}),this.$emit("pane-remove",{removed:i,panes:this.panes.map(e=>({min:e.min,max:e.max,size:e.size}))})})},resetPaneSizes(e={}){e.addedPane||e.removedPane?this.panes.some(e=>null!==e.givenSize||e.min||e.max<100)?this.equalizeAfterAddOrRemove(e):this.equalize():this.initialPanesSizing(),this.ready&&this.$emit("resized",this.panes.map(e=>({min:e.min,max:e.max,size:e.size})))},equalize(){const e=100/this.panesCount;let t=0,i=[],n=[];this.panes.forEach(s=>{s.size=Math.max(Math.min(e,s.max),s.min),t-=s.size,s.size>=s.max&&i.push(s.id),s.size<=s.min&&n.push(s.id)}),t>.1&&this.readjustSizes(t,i,n)},initialPanesSizing(){this.panesCount;let e=100,t=[],i=[],n=0;this.panes.forEach(s=>{e-=s.size,null!==s.size&&n++,s.size>=s.max&&t.push(s.id),s.size<=s.min&&i.push(s.id)});let s=100;e>.1&&(this.panes.forEach(t=>{null===t.size&&(t.size=Math.max(Math.min(e/(this.panesCount-n),t.max),t.min)),s-=t.size}),s>.1&&this.readjustSizes(e,t,i))},equalizeAfterAddOrRemove({addedPane:e,removedPane:t}={}){let i=100/this.panesCount,n=0,s=[],a=[];e&&null!==e.givenSize&&(i=(100-e.givenSize)/(this.panesCount-1)),this.panes.forEach(e=>{n-=e.size,e.size>=e.max&&s.push(e.id),e.size<=e.min&&a.push(e.id)}),Math.abs(n)<.1||(this.panes.forEach(t=>{e&&null!==e.givenSize&&e.id===t.id||(t.size=Math.max(Math.min(i,t.max),t.min)),n-=t.size,t.size>=t.max&&s.push(t.id),t.size<=t.min&&a.push(t.id)}),n>.1&&this.readjustSizes(n,s,a))},readjustSizes(e,t,i){let n;n=e>0?e/(this.panesCount-t.length):e/(this.panesCount-i.length),this.panes.forEach((s,a)=>{if(e>0&&!t.includes(s.id)){const t=Math.max(Math.min(s.size+n,s.max),s.min),i=t-s.size;e-=i,s.size=t}else if(!i.includes(s.id)){const t=Math.max(Math.min(s.size+n,s.max),s.min),i=t-s.size;e-=i,s.size=t}s.update({[this.horizontal?"height":"width"]:this.indexedPanes[s.id].size+"%"})}),Math.abs(e)>.1&&this.$nextTick(()=>{this.ready&&console.warn("Splitpanes: Could not resize panes correctly due to their constraints.")})}},watch:{panes:{deep:!0,immediate:!1,handler(){this.updatePaneComponents()}},horizontal(){this.updatePaneComponents()},firstSplitter(){this.redoSplitters()},dblClickSplitter(e){const t=[...this.container.querySelectorAll(".splitpanes__splitter")];t.forEach((t,i)=>{t.ondblclick=e?e=>this.onSplitterDblClick(e,i):void 0})}},beforeUnmount(){this.ready=!1},mounted(){this.container=this.$refs.container,this.checkSplitpanesNodes(),this.redoSplitters(),this.resetPaneSizes(),this.$emit("ready"),this.ready=!0},render(){return Object(n["h"])("div",{ref:"container",class:["splitpanes","splitpanes--"+(this.horizontal?"horizontal":"vertical"),{"splitpanes--dragging":this.touch.dragging}]},this.$slots.default())}};var z=(e,t)=>{const i=e.__vccOpts||e;for(const[n,s]of t)i[n]=s;return i};const x={name:"pane",inject:["requestUpdate","onPaneAdd","onPaneRemove","onPaneClick"],props:{size:{type:[Number,String],default:null},minSize:{type:[Number,String],default:0},maxSize:{type:[Number,String],default:100}},data:()=>({style:{}}),mounted(){this.onPaneAdd(this)},beforeUnmount(){this.onPaneRemove(this)},methods:{update(e){this.style=e}},computed:{sizeNumber(){return this.size||0===this.size?parseFloat(this.size):null},minSizeNumber(){return parseFloat(this.minSize)},maxSizeNumber(){return parseFloat(this.maxSize)}},watch:{sizeNumber(e){this.requestUpdate({target:this,size:e})},minSizeNumber(e){this.requestUpdate({target:this,min:e})},maxSizeNumber(e){this.requestUpdate({target:this,max:e})}}};function f(e,t,i,s,a,r){return Object(n["openBlock"])(),Object(n["createElementBlock"])("div",{class:"splitpanes__pane",onClick:t[0]||(t[0]=t=>r.onPaneClick(t,e._.uid)),style:Object(n["normalizeStyle"])(e.style)},[Object(n["renderSlot"])(e.$slots,"default")],4)}var v=z(x,[["render",f]]),P=(i("c1ea"),Object(n["createTextVNode"])("1")),S=Object(n["createTextVNode"])("2"),b=Object(n["createTextVNode"])("3"),O=Object(n["createTextVNode"])("4"),g=Object(n["createTextVNode"])("5"),M=Object(n["defineComponent"])({setup:function(e){return function(e,t){return Object(n["openBlock"])(),Object(n["createBlock"])(Object(n["unref"])(m),{style:{height:"800px"}},{default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(Object(n["unref"])(v),{"min-size":"20",class:"left"},{default:Object(n["withCtx"])((function(){return[P]})),_:1}),Object(n["createVNode"])(Object(n["unref"])(v),null,{default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(Object(n["unref"])(m),{horizontal:""},{default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(Object(n["unref"])(v),{class:"item1"},{default:Object(n["withCtx"])((function(){return[S]})),_:1}),Object(n["createVNode"])(Object(n["unref"])(v),{class:"item2"},{default:Object(n["withCtx"])((function(){return[b]})),_:1}),Object(n["createVNode"])(Object(n["unref"])(v),{class:"item3"},{default:Object(n["withCtx"])((function(){return[O]})),_:1})]})),_:1})]})),_:1}),Object(n["createVNode"])(Object(n["unref"])(v),{class:"item4"},{default:Object(n["withCtx"])((function(){return[g]})),_:1})]})),_:1})}}}),j=(i("8be5"),i("6b0d")),C=i.n(j);const w=C()(M,[["__scopeId","data-v-23371f36"]]);t["default"]=w},"7cbf":function(e,t,i){},"8be5":function(e,t,i){"use strict";i("7cbf")},c1ea:function(e,t,i){}}]);
//# sourceMappingURL=chunk-3baa9536.ead11f6c.js.map