{"version":3,"sources":["webpack:///./node_modules/splitpanes/dist/splitpanes.es.js","webpack:///./src/views/other/splitpane.vue?8a67","webpack:///./src/views/other/splitpane.vue","webpack:///./src/views/other/splitpane.vue?07e3"],"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","_sfc_main$1","name","emits","props","horizontal","type","Boolean","pushOtherPanes","default","dblClickSplitter","rtl","firstSplitter","requestUpdate","this","onPaneAdd","onPaneRemove","onPaneClick","data","container","ready","panes","touch","mouseDown","dragging","activeSplitter","splitterTaps","splitter","timeoutId","computed","length","reduce","pane2","id","methods","forEach","update","indexedPanes","size","document","addEventListener","onMouseMove","passive","onMouseUp","window","removeEventListener","event","splitterIndex","bindEvents","preventDefault","calculatePanesSize","getCurrentMouseDrag","$emit","map","min","max","setTimeout","unbindEvents","clearTimeout","onSplitterDblClick","totalMinSizes","i","paneId","rect","getBoundingClientRect","clientX","clientY","touches","x","left","y","top","drag","containerSize","sums","prevPanesSize","sumPrevPanesSize","nextPanesSize","sumNextPanesSize","prevReachedMinPanes","nextReachedMinPanes","minDrag","maxDrag","dragPercentage","Math","getCurrentDragPercentage","panesToResize","paneBefore","paneAfter","paneBeforeMaxReached","paneAfterMaxReached","vars","doPushOtherPanes","findPrevExpandedPane","index","findNextExpandedPane","panesCount","total","reverse","find","p","children","Array","from","child","isPane","classList","contains","isSplitter","parentNode","removeChild","console","warn","paneIndex","nextPaneNode","isVeryFirst","elm","createElement","add","onmousedown","onMouseDown","ontouchstart","onclick","onSplitterClick","ondblclick","insertBefore","node","el","className","includes","removeSplitter","addSplitter","_a","_b","args","_","uid","entries","$el","some","parseFloat","minSize","maxSize","splice","isNaN","givenSize","$nextTick","redoSplitters","resetPaneSizes","addedPane","pane3","findIndex","removed","removedPane","changedPanes","equalizeAfterAddOrRemove","equalize","initialPanesSizing","equalSpace","leftToAllocate","ungrowable","unshrinkable","push","readjustSizes","definedSizes","leftToAllocate2","abs","equalSpaceToAllocate","newPaneSize","allocated","watch","deep","immediate","updatePaneComponents","enable","splitters","querySelectorAll","$refs","checkSplitpanesNodes","ref","class","$slots","_export_sfc","sfc","__vccOpts","val","_sfc_main","inject","Number","String","style","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","onClick","$event","pane","_hoisted_1","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_defineComponent","setup","__props","_openBlock","_createBlock","_unref","Splitpanes","_withCtx","_createVNode","Pane","__exports__"],"mappings":"uIAAIA,EAAYC,OAAOC,eACnBC,EAAaF,OAAOG,iBACpBC,EAAoBJ,OAAOK,0BAC3BC,EAAsBN,OAAOO,sBAC7BC,EAAeR,OAAOS,UAAUC,eAChCC,EAAeX,OAAOS,UAAUG,qBAChCC,EAAkB,CAACC,EAAKC,EAAKC,IAAUD,KAAOD,EAAMf,EAAUe,EAAKC,EAAK,CAAEE,YAAY,EAAMC,cAAc,EAAMC,UAAU,EAAMH,UAAWF,EAAIC,GAAOC,EACtJI,EAAiB,CAACC,EAAGC,KACvB,IAAK,IAAIC,KAAQD,IAAMA,EAAI,IACrBd,EAAagB,KAAKF,EAAGC,IACvBV,EAAgBQ,EAAGE,EAAMD,EAAEC,IAC/B,GAAIjB,EACF,IAAK,IAAIiB,KAAQjB,EAAoBgB,GAC/BX,EAAaa,KAAKF,EAAGC,IACvBV,EAAgBQ,EAAGE,EAAMD,EAAEC,IAEjC,OAAOF,GAELI,EAAgB,CAACJ,EAAGC,IAAMpB,EAAWmB,EAAGjB,EAAkBkB,IAC1DI,EAAY,CAACC,EAAQC,KACvB,IAAIC,EAAS,GACb,IAAK,IAAIN,KAAQI,EACXnB,EAAagB,KAAKG,EAAQJ,IAASK,EAAQE,QAAQP,GAAQ,IAC7DM,EAAON,GAAQI,EAAOJ,IAC1B,GAAc,MAAVI,GAAkBrB,EACpB,IAAK,IAAIiB,KAAQjB,EAAoBqB,GAC/BC,EAAQE,QAAQP,GAAQ,GAAKZ,EAAaa,KAAKG,EAAQJ,KACzDM,EAAON,GAAQI,EAAOJ,IAE5B,OAAOM,GAIT,MAAME,EAAc,CAClBC,KAAM,aACNC,MAAO,CAAC,QAAS,SAAU,UAAW,aAAc,gBAAiB,WAAY,cAAe,kBAChGC,MAAO,CACLC,WAAY,CAAEC,KAAMC,SACpBC,eAAgB,CAAEF,KAAMC,QAASE,SAAS,GAC1CC,iBAAkB,CAAEJ,KAAMC,QAASE,SAAS,GAC5CE,IAAK,CAAEL,KAAMC,QAASE,SAAS,GAC/BG,cAAe,CAAEN,KAAMC,UAEzB,UACE,MAAO,CACLM,cAAeC,KAAKD,cACpBE,UAAWD,KAAKC,UAChBC,aAAcF,KAAKE,aACnBC,YAAaH,KAAKG,cAGtBC,KAAM,KAAM,CACVC,UAAW,KACXC,OAAO,EACPC,MAAO,GACPC,MAAO,CACLC,WAAW,EACXC,UAAU,EACVC,eAAgB,MAElBC,aAAc,CACZC,SAAU,KACVC,UAAW,QAGfC,SAAU,CACR,aACE,OAAOf,KAAKO,MAAMS,QAEpB,eACE,OAAOhB,KAAKO,MAAMU,OAAO,CAAC/C,EAAKgD,KAAWhD,EAAIgD,EAAMC,IAAMD,IAAUhD,EAAK,MAG7EkD,QAAS,CACP,uBACEpB,KAAKO,MAAMc,QAASH,IAClBA,EAAMI,QAAUJ,EAAMI,OAAO,CAC3B,CAACtB,KAAKT,WAAa,SAAW,SAAaS,KAAKuB,aAAaL,EAAMC,IAAIK,KAA/B,SAI9C,aACEC,SAASC,iBAAiB,YAAa1B,KAAK2B,YAAa,CAAEC,SAAS,IACpEH,SAASC,iBAAiB,UAAW1B,KAAK6B,WACtC,iBAAkBC,SACpBL,SAASC,iBAAiB,YAAa1B,KAAK2B,YAAa,CAAEC,SAAS,IACpEH,SAASC,iBAAiB,WAAY1B,KAAK6B,aAG/C,eACEJ,SAASM,oBAAoB,YAAa/B,KAAK2B,YAAa,CAAEC,SAAS,IACvEH,SAASM,oBAAoB,UAAW/B,KAAK6B,WACzC,iBAAkBC,SACpBL,SAASM,oBAAoB,YAAa/B,KAAK2B,YAAa,CAAEC,SAAS,IACvEH,SAASM,oBAAoB,WAAY/B,KAAK6B,aAGlD,YAAYG,EAAOC,GACjBjC,KAAKkC,aACLlC,KAAKQ,MAAMC,WAAY,EACvBT,KAAKQ,MAAMG,eAAiBsB,GAE9B,YAAYD,GACNhC,KAAKQ,MAAMC,YACbuB,EAAMG,iBACNnC,KAAKQ,MAAME,UAAW,EACtBV,KAAKoC,mBAAmBpC,KAAKqC,oBAAoBL,IACjDhC,KAAKsC,MAAM,SAAUtC,KAAKO,MAAMgC,IAAKrB,IAAU,CAAGsB,IAAKtB,EAAMsB,IAAKC,IAAKvB,EAAMuB,IAAKjB,KAAMN,EAAMM,WAGlG,YACMxB,KAAKQ,MAAME,UACbV,KAAKsC,MAAM,UAAWtC,KAAKO,MAAMgC,IAAKrB,IAAU,CAAGsB,IAAKtB,EAAMsB,IAAKC,IAAKvB,EAAMuB,IAAKjB,KAAMN,EAAMM,SAEjGxB,KAAKQ,MAAMC,WAAY,EACvBiC,WAAW,KACT1C,KAAKQ,MAAME,UAAW,EACtBV,KAAK2C,gBACJ,MAEL,gBAAgBX,EAAOC,GACjB,iBAAkBH,SACpBE,EAAMG,iBACFnC,KAAKJ,mBACHI,KAAKY,aAAaC,WAAaoB,GACjCW,aAAa5C,KAAKY,aAAaE,WAC/Bd,KAAKY,aAAaE,UAAY,KAC9Bd,KAAK6C,mBAAmBb,EAAOC,GAC/BjC,KAAKY,aAAaC,SAAW,OAE7Bb,KAAKY,aAAaC,SAAWoB,EAC7BjC,KAAKY,aAAaE,UAAY4B,WAAW,KACvC1C,KAAKY,aAAaC,SAAW,MAC5B,QAIJb,KAAKQ,MAAME,UACdV,KAAKsC,MAAM,iBAAkBtC,KAAKO,MAAM0B,KAE5C,mBAAmBD,EAAOC,GACxB,IAAIa,EAAgB,EACpB9C,KAAKO,MAAQP,KAAKO,MAAMgC,IAAI,CAACrB,EAAO6B,KAClC7B,EAAMM,KAAOuB,IAAMd,EAAgBf,EAAMuB,IAAMvB,EAAMsB,IACjDO,IAAMd,IACRa,GAAiB5B,EAAMsB,KAClBtB,IAETlB,KAAKO,MAAM0B,GAAeT,MAAQsB,EAClC9C,KAAKsC,MAAM,gBAAiBtC,KAAKO,MAAM0B,KAEzC,YAAYD,EAAOgB,GACjBhD,KAAKsC,MAAM,aAActC,KAAKuB,aAAayB,KAE7C,oBAAoBhB,GAClB,MAAMiB,EAAOjD,KAAKK,UAAU6C,yBACtB,QAAEC,EAAO,QAAEC,GAAY,iBAAkBtB,QAAUE,EAAMqB,QAAUrB,EAAMqB,QAAQ,GAAKrB,EAC5F,MAAO,CACLsB,EAAGH,EAAUF,EAAKM,KAClBC,EAAGJ,EAAUH,EAAKQ,MAGtB,yBAAyBC,GACvBA,EAAOA,EAAK1D,KAAKT,WAAa,IAAM,KACpC,MAAMoE,EAAgB3D,KAAKK,UAAUL,KAAKT,WAAa,eAAiB,eAGxE,OAFIS,KAAKH,MAAQG,KAAKT,aACpBmE,EAAOC,EAAgBD,GACX,IAAPA,EAAaC,GAEtB,mBAAmBD,GACjB,MAAMzB,EAAgBjC,KAAKQ,MAAMG,eACjC,IAAIiD,EAAO,CACTC,cAAe7D,KAAK8D,iBAAiB7B,GACrC8B,cAAe/D,KAAKgE,iBAAiB/B,GACrCgC,oBAAqB,EACrBC,oBAAqB,GAEvB,MAAMC,EAAU,GAAKnE,KAAKN,eAAiB,EAAIkE,EAAKC,eAC9CO,EAAU,KAAOpE,KAAKN,eAAiB,EAAIkE,EAAKG,eAChDM,EAAiBC,KAAK7B,IAAI6B,KAAK9B,IAAIxC,KAAKuE,yBAAyBb,GAAOU,GAAUD,GACxF,IAAIK,EAAgB,CAACvC,EAAeA,EAAgB,GAChDwC,EAAazE,KAAKO,MAAMiE,EAAc,KAAO,KAC7CE,EAAY1E,KAAKO,MAAMiE,EAAc,KAAO,KAChD,MAAMG,EAAuBF,EAAWhC,IAAM,KAAO4B,GAAkBI,EAAWhC,IAAMmB,EAAKC,cACvFe,EAAsBF,EAAUjC,IAAM,KAAO4B,GAAkB,KAAOK,EAAUjC,IAAMzC,KAAKgE,iBAAiB/B,EAAgB,IAClI,GAAI0C,GAAwBC,EACtBD,GACFF,EAAWjD,KAAOiD,EAAWhC,IAC7BiC,EAAUlD,KAAO8C,KAAK7B,IAAI,IAAMgC,EAAWhC,IAAMmB,EAAKC,cAAgBD,EAAKG,cAAe,KAE1FU,EAAWjD,KAAO8C,KAAK7B,IAAI,IAAMiC,EAAUjC,IAAMmB,EAAKC,cAAgB7D,KAAKgE,iBAAiB/B,EAAgB,GAAI,GAChHyC,EAAUlD,KAAOkD,EAAUjC,SAN/B,CAUA,GAAIzC,KAAKN,eAAgB,CACvB,MAAMmF,EAAO7E,KAAK8E,iBAAiBlB,EAAMS,GACzC,IAAKQ,EACH,SACCjB,OAAMY,iBAAkBK,GAC3BJ,EAAazE,KAAKO,MAAMiE,EAAc,KAAO,KAC7CE,EAAY1E,KAAKO,MAAMiE,EAAc,KAAO,KAE3B,OAAfC,IACFA,EAAWjD,KAAO8C,KAAK9B,IAAI8B,KAAK7B,IAAI4B,EAAiBT,EAAKC,cAAgBD,EAAKK,oBAAqBQ,EAAWjC,KAAMiC,EAAWhC,MAEhH,OAAdiC,IACFA,EAAUlD,KAAO8C,KAAK9B,IAAI8B,KAAK7B,IAAI,IAAM4B,EAAiBT,EAAKG,cAAgBH,EAAKM,oBAAqBQ,EAAUlC,KAAMkC,EAAUjC,QAGvI,iBAAiBmB,EAAMS,GACrB,MAAMpC,EAAgBjC,KAAKQ,MAAMG,eAC3B6D,EAAgB,CAACvC,EAAeA,EAAgB,GACtD,OAAIoC,EAAiBT,EAAKC,cAAgB7D,KAAKO,MAAMiE,EAAc,IAAIhC,MACrEgC,EAAc,GAAKxE,KAAK+E,qBAAqB9C,GAAe+C,MAC5DpB,EAAKK,oBAAsB,EACvBO,EAAc,GAAKvC,GACrBjC,KAAKO,MAAMc,QAAQ,CAACH,EAAO6B,KACrBA,EAAIyB,EAAc,IAAMzB,GAAKd,IAC/Bf,EAAMM,KAAON,EAAMsB,IACnBoB,EAAKK,qBAAuB/C,EAAMsB,OAIxCoB,EAAKC,cAAgB7D,KAAK8D,iBAAiBU,EAAc,SAChC,IAArBA,EAAc,KAChBZ,EAAKK,oBAAsB,EAC3BjE,KAAKO,MAAM,GAAGiB,KAAOxB,KAAKO,MAAM,GAAGiC,IACnCxC,KAAKO,MAAMc,QAAQ,CAACH,EAAO6B,KACrBA,EAAI,GAAKA,GAAKd,IAChBf,EAAMM,KAAON,EAAMsB,IACnBoB,EAAKK,qBAAuB/C,EAAMsB,OAGtCxC,KAAKO,MAAMiE,EAAc,IAAIhD,KAAO,IAAMoC,EAAKK,oBAAsBjE,KAAKO,MAAM,GAAGiC,IAAMoB,EAAKC,cAAgBD,EAAKG,cAC5G,MAGPM,EAAiB,IAAMT,EAAKG,cAAgB/D,KAAKO,MAAMiE,EAAc,IAAIhC,MAC3EgC,EAAc,GAAKxE,KAAKiF,qBAAqBhD,GAAe+C,MAC5DpB,EAAKM,oBAAsB,EACvBM,EAAc,GAAKvC,EAAgB,GACrCjC,KAAKO,MAAMc,QAAQ,CAACH,EAAO6B,KACrBA,EAAId,GAAiBc,EAAIyB,EAAc,KACzCtD,EAAMM,KAAON,EAAMsB,IACnBoB,EAAKM,qBAAuBhD,EAAMsB,OAIxCoB,EAAKG,cAAgB/D,KAAKgE,iBAAiBQ,EAAc,GAAK,QACrC,IAArBA,EAAc,KAChBZ,EAAKM,oBAAsB,EAC3BlE,KAAKO,MAAMP,KAAKkF,WAAa,GAAG1D,KAAOxB,KAAKO,MAAMP,KAAKkF,WAAa,GAAG1C,IACvExC,KAAKO,MAAMc,QAAQ,CAACH,EAAO6B,KACrBA,EAAI/C,KAAKkF,WAAa,GAAKnC,GAAKd,EAAgB,IAClDf,EAAMM,KAAON,EAAMsB,IACnBoB,EAAKM,qBAAuBhD,EAAMsB,OAGtCxC,KAAKO,MAAMiE,EAAc,IAAIhD,KAAO,IAAMoC,EAAKC,cAAgBD,EAAKM,oBAAsBlE,KAAKO,MAAMP,KAAKkF,WAAa,GAAG1C,IAAMoB,EAAKG,cAC9H,MAGJ,CAAEH,OAAMY,kBAEjB,iBAAiBvC,GACf,OAAOjC,KAAKO,MAAMU,OAAO,CAACkE,EAAOjE,EAAO6B,IAAMoC,GAASpC,EAAId,EAAgBf,EAAMM,KAAO,GAAI,IAE9F,iBAAiBS,GACf,OAAOjC,KAAKO,MAAMU,OAAO,CAACkE,EAAOjE,EAAO6B,IAAMoC,GAASpC,EAAId,EAAgB,EAAIf,EAAMM,KAAO,GAAI,IAElG,qBAAqBS,GACnB,MAAMf,EAAQ,IAAIlB,KAAKO,OAAO6E,UAAUC,KAAMC,GAAMA,EAAEN,MAAQ/C,GAAiBqD,EAAE9D,KAAO8D,EAAE9C,KAC1F,OAAOtB,GAAS,IAElB,qBAAqBe,GACnB,MAAMf,EAAQlB,KAAKO,MAAM8E,KAAMC,GAAMA,EAAEN,MAAQ/C,EAAgB,GAAKqD,EAAE9D,KAAO8D,EAAE9C,KAC/E,OAAOtB,GAAS,IAElB,uBACE,MAAMqE,EAAWC,MAAMC,KAAKzF,KAAKK,UAAUkF,UAC3CA,EAASlE,QAASqE,IAChB,MAAMC,EAASD,EAAME,UAAUC,SAAS,oBAClCC,EAAaJ,EAAME,UAAUC,SAAS,wBAC5C,IAAKF,IAAWG,EAGd,OAFAJ,EAAMK,WAAWC,YAAYN,QAC7BO,QAAQC,KAAK,mHAKnB,YAAYC,EAAWC,EAAcC,GAAc,GACjD,MAAMpE,EAAgBkE,EAAY,EAC5BG,EAAM7E,SAAS8E,cAAc,OACnCD,EAAIV,UAAUY,IAAI,wBACbH,IACHC,EAAIG,YAAezE,GAAUhC,KAAK0G,YAAY1E,EAAOC,GAC/B,qBAAXH,QAA0B,iBAAkBA,SACrDwE,EAAIK,aAAgB3E,GAAUhC,KAAK0G,YAAY1E,EAAOC,IAExDqE,EAAIM,QAAW5E,GAAUhC,KAAK6G,gBAAgB7E,EAAOC,EAAgB,IAEnEjC,KAAKJ,mBACP0G,EAAIQ,WAAc9E,GAAUhC,KAAK6C,mBAAmBb,EAAOC,EAAgB,IAE7EmE,EAAaL,WAAWgB,aAAaT,EAAKF,IAE5C,eAAeY,GACbA,EAAKP,iBAAc,EACnBO,EAAKJ,aAAU,EACfI,EAAKF,gBAAa,EAClBE,EAAKjB,WAAWC,YAAYgB,IAE9B,gBACE,MAAMzB,EAAWC,MAAMC,KAAKzF,KAAKK,UAAUkF,UAC3CA,EAASlE,QAAS4F,IACZA,EAAGC,UAAUC,SAAS,yBACxBnH,KAAKoH,eAAeH,KAExB,IAAId,EAAY,EAChBZ,EAASlE,QAAS4F,IACZA,EAAGC,UAAUC,SAAS,uBACnBhB,GAAanG,KAAKF,cACrBE,KAAKqH,YAAYlB,EAAWc,GAAI,GACzBd,GACPnG,KAAKqH,YAAYlB,EAAWc,GAC9Bd,QAIN,cAAcmB,GACZ,IAAIC,EAAKD,GAAI,OAAErI,GAAWsI,EAAIC,EAAO1I,EAAUyI,EAAI,CAAC,WACpD,MAAMrG,EAAQlB,KAAKuB,aAAatC,EAAOwI,EAAEC,KACzCtK,OAAOuK,QAAQH,GAAMnG,QAAQ,EAAElD,EAAKC,KAAW8C,EAAM/C,GAAOC,IAE9D,UAAU8C,GACR,IAAI8D,GAAS,EACbQ,MAAMC,KAAKvE,EAAM0G,IAAI7B,WAAWR,UAAUsC,KAAMZ,IAC1CA,EAAGC,UAAUC,SAAS,qBACxBnC,IACKiC,IAAO/F,EAAM0G,MAEtB,MAAMpF,EAAMsF,WAAW5G,EAAM6G,SACvBtF,EAAMqF,WAAW5G,EAAM8G,SAC7BhI,KAAKO,MAAM0H,OAAOjD,EAAO,EAAG,CAC1B7D,GAAID,EAAMuG,EAAEC,IACZ1C,QACAxC,IAAK0F,MAAM1F,GAAO,EAAIA,EACtBC,IAAKyF,MAAMzF,GAAO,IAAMA,EACxBjB,KAAqB,OAAfN,EAAMM,KAAgB,KAAOsG,WAAW5G,EAAMM,MACpD2G,UAAWjH,EAAMM,KACjBF,OAAQJ,EAAMI,SAEhBtB,KAAKO,MAAMc,QAAQ,CAACiE,EAAGvC,IAAMuC,EAAEN,MAAQjC,GACnC/C,KAAKM,OACPN,KAAKoI,UAAU,KACbpI,KAAKqI,gBACLrI,KAAKsI,eAAe,CAAEC,UAAWvI,KAAKO,MAAMyE,KAC5ChF,KAAKsC,MAAM,WAAY,CAAE0C,QAAOzE,MAAOP,KAAKO,MAAMgC,IAAKiG,IAAU,CAAGhG,IAAKgG,EAAMhG,IAAKC,IAAK+F,EAAM/F,IAAKjB,KAAMgH,EAAMhH,aAItH,aAAaN,GACX,MAAM8D,EAAQhF,KAAKO,MAAMkI,UAAWnD,GAAMA,EAAEnE,KAAOD,EAAMuG,EAAEC,KACrDgB,EAAU1I,KAAKO,MAAM0H,OAAOjD,EAAO,GAAG,GAC5ChF,KAAKO,MAAMc,QAAQ,CAACiE,EAAGvC,IAAMuC,EAAEN,MAAQjC,GACvC/C,KAAKoI,UAAU,KACbpI,KAAKqI,gBACLrI,KAAKsI,eAAe,CAAEK,YAAa9J,EAAcL,EAAe,GAAIkK,GAAU,CAAE1D,YAChFhF,KAAKsC,MAAM,cAAe,CAAEoG,UAASnI,MAAOP,KAAKO,MAAMgC,IAAKiG,IAAU,CAAGhG,IAAKgG,EAAMhG,IAAKC,IAAK+F,EAAM/F,IAAKjB,KAAMgH,EAAMhH,aAGzH,eAAeoH,EAAe,IACvBA,EAAaL,WAAcK,EAAaD,YAEpC3I,KAAKO,MAAMsH,KAAM3G,GAA8B,OAApBA,EAAMiH,WAAsBjH,EAAMsB,KAAOtB,EAAMuB,IAAM,KACvFzC,KAAK6I,yBAAyBD,GAE9B5I,KAAK8I,WAJL9I,KAAK+I,qBAKH/I,KAAKM,OACPN,KAAKsC,MAAM,UAAWtC,KAAKO,MAAMgC,IAAKrB,IAAU,CAAGsB,IAAKtB,EAAMsB,IAAKC,IAAKvB,EAAMuB,IAAKjB,KAAMN,EAAMM,UAEnG,WACE,MAAMwH,EAAa,IAAMhJ,KAAKkF,WAC9B,IAAI+D,EAAiB,EACjBC,EAAa,GACbC,EAAe,GACnBnJ,KAAKO,MAAMc,QAASH,IAClBA,EAAMM,KAAO8C,KAAK7B,IAAI6B,KAAK9B,IAAIwG,EAAY9H,EAAMuB,KAAMvB,EAAMsB,KAC7DyG,GAAkB/H,EAAMM,KACpBN,EAAMM,MAAQN,EAAMuB,KACtByG,EAAWE,KAAKlI,EAAMC,IACpBD,EAAMM,MAAQN,EAAMsB,KACtB2G,EAAaC,KAAKlI,EAAMC,MAExB8H,EAAiB,IACnBjJ,KAAKqJ,cAAcJ,EAAgBC,EAAYC,IAEnD,qBACQnJ,KAAKkF,WACX,IAAI+D,EAAiB,IACjBC,EAAa,GACbC,EAAe,GACfG,EAAe,EACnBtJ,KAAKO,MAAMc,QAASH,IAClB+H,GAAkB/H,EAAMM,KACL,OAAfN,EAAMM,MACR8H,IACEpI,EAAMM,MAAQN,EAAMuB,KACtByG,EAAWE,KAAKlI,EAAMC,IACpBD,EAAMM,MAAQN,EAAMsB,KACtB2G,EAAaC,KAAKlI,EAAMC,MAE5B,IAAIoI,EAAkB,IAClBN,EAAiB,KACnBjJ,KAAKO,MAAMc,QAASH,IACC,OAAfA,EAAMM,OACRN,EAAMM,KAAO8C,KAAK7B,IAAI6B,KAAK9B,IAAIyG,GAAkBjJ,KAAKkF,WAAaoE,GAAepI,EAAMuB,KAAMvB,EAAMsB,MAEtG+G,GAAmBrI,EAAMM,OAEvB+H,EAAkB,IACpBvJ,KAAKqJ,cAAcJ,EAAgBC,EAAYC,KAGrD,0BAAyB,UAAEZ,EAAS,YAAEI,GAAgB,IACpD,IAAIK,EAAa,IAAMhJ,KAAKkF,WACxB+D,EAAiB,EACjBC,EAAa,GACbC,EAAe,GACfZ,GAAqC,OAAxBA,EAAUJ,YACzBa,GAAc,IAAMT,EAAUJ,YAAcnI,KAAKkF,WAAa,IAEhElF,KAAKO,MAAMc,QAASH,IAClB+H,GAAkB/H,EAAMM,KACpBN,EAAMM,MAAQN,EAAMuB,KACtByG,EAAWE,KAAKlI,EAAMC,IACpBD,EAAMM,MAAQN,EAAMsB,KACtB2G,EAAaC,KAAKlI,EAAMC,MAExBmD,KAAKkF,IAAIP,GAAkB,KAE/BjJ,KAAKO,MAAMc,QAASH,IACdqH,GAAqC,OAAxBA,EAAUJ,WAAsBI,EAAUpH,KAAOD,EAAMC,KAGtED,EAAMM,KAAO8C,KAAK7B,IAAI6B,KAAK9B,IAAIwG,EAAY9H,EAAMuB,KAAMvB,EAAMsB,MAC/DyG,GAAkB/H,EAAMM,KACpBN,EAAMM,MAAQN,EAAMuB,KACtByG,EAAWE,KAAKlI,EAAMC,IACpBD,EAAMM,MAAQN,EAAMsB,KACtB2G,EAAaC,KAAKlI,EAAMC,MAExB8H,EAAiB,IACnBjJ,KAAKqJ,cAAcJ,EAAgBC,EAAYC,KAEnD,cAAcF,EAAgBC,EAAYC,GACxC,IAAIM,EAEFA,EADER,EAAiB,EACIA,GAAkBjJ,KAAKkF,WAAagE,EAAWlI,QAE/CiI,GAAkBjJ,KAAKkF,WAAaiE,EAAanI,QAC1EhB,KAAKO,MAAMc,QAAQ,CAACH,EAAO6B,KACzB,GAAIkG,EAAiB,IAAMC,EAAW/B,SAASjG,EAAMC,IAAK,CACxD,MAAMuI,EAAcpF,KAAK7B,IAAI6B,KAAK9B,IAAItB,EAAMM,KAAOiI,EAAsBvI,EAAMuB,KAAMvB,EAAMsB,KACrFmH,EAAYD,EAAcxI,EAAMM,KACtCyH,GAAkBU,EAClBzI,EAAMM,KAAOkI,OACR,IAAKP,EAAahC,SAASjG,EAAMC,IAAK,CAC3C,MAAMuI,EAAcpF,KAAK7B,IAAI6B,KAAK9B,IAAItB,EAAMM,KAAOiI,EAAsBvI,EAAMuB,KAAMvB,EAAMsB,KACrFmH,EAAYD,EAAcxI,EAAMM,KACtCyH,GAAkBU,EAClBzI,EAAMM,KAAOkI,EAEfxI,EAAMI,OAAO,CACX,CAACtB,KAAKT,WAAa,SAAW,SAAaS,KAAKuB,aAAaL,EAAMC,IAAIK,KAA/B,QAGxC8C,KAAKkF,IAAIP,GAAkB,IAC7BjJ,KAAKoI,UAAU,KACTpI,KAAKM,OACP2F,QAAQC,KAAK,8EAMvB0D,MAAO,CACLrJ,MAAO,CACLsJ,MAAM,EACNC,WAAW,EACX,UACE9J,KAAK+J,yBAGT,aACE/J,KAAK+J,wBAEP,gBACE/J,KAAKqI,iBAEP,iBAAiB2B,GACf,MAAMC,EAAY,IAAIjK,KAAKK,UAAU6J,iBAAiB,0BACtDD,EAAU5I,QAAQ,CAACR,EAAUkC,KAC3BlC,EAASiG,WAAakD,EAAUhI,GAAUhC,KAAK6C,mBAAmBb,EAAOe,QAAK,MAIpF,gBACE/C,KAAKM,OAAQ,GAEf,UACEN,KAAKK,UAAYL,KAAKmK,MAAM9J,UAC5BL,KAAKoK,uBACLpK,KAAKqI,gBACLrI,KAAKsI,iBACLtI,KAAKsC,MAAM,SACXtC,KAAKM,OAAQ,GAEf,SACE,OAAO,eAAE,MAAO,CACd+J,IAAK,YACLC,MAAO,CACL,aACA,gBAAetK,KAAKT,WAAa,aAAe,YAChD,CACE,uBAAwBS,KAAKQ,MAAME,YAGtCV,KAAKuK,OAAO5K,aAGnB,IAAI6K,EAAc,CAACC,EAAKnL,KACtB,MAAML,EAASwL,EAAIC,WAAaD,EAChC,IAAK,MAAOtM,EAAKwM,KAAQrL,EACvBL,EAAOd,GAAOwM,EAEhB,OAAO1L,GAET,MAAM2L,EAAY,CAChBxL,KAAM,OACNyL,OAAQ,CAAC,gBAAiB,YAAa,eAAgB,eACvDvL,MAAO,CACLkC,KAAM,CAAEhC,KAAM,CAACsL,OAAQC,QAASpL,QAAS,MACzCoI,QAAS,CAAEvI,KAAM,CAACsL,OAAQC,QAASpL,QAAS,GAC5CqI,QAAS,CAAExI,KAAM,CAACsL,OAAQC,QAASpL,QAAS,MAE9CS,KAAM,KAAM,CACV4K,MAAO,KAET,UACEhL,KAAKC,UAAUD,OAEjB,gBACEA,KAAKE,aAAaF,OAEpBoB,QAAS,CACP,OAAO4J,GACLhL,KAAKgL,MAAQA,IAGjBjK,SAAU,CACR,aACE,OAAOf,KAAKwB,MAAsB,IAAdxB,KAAKwB,KAAasG,WAAW9H,KAAKwB,MAAQ,MAEhE,gBACE,OAAOsG,WAAW9H,KAAK+H,UAEzB,gBACE,OAAOD,WAAW9H,KAAKgI,WAG3B4B,MAAO,CACL,WAAWpI,GACTxB,KAAKD,cAAc,CAAEd,OAAQe,KAAMwB,UAErC,cAAcgB,GACZxC,KAAKD,cAAc,CAAEd,OAAQe,KAAMwC,SAErC,cAAcC,GACZzC,KAAKD,cAAc,CAAEd,OAAQe,KAAMyC,WAIzC,SAASwI,EAAYC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GACxD,OAAO,yBAAa,gCAAmB,MAAO,CAC5CjB,MAAO,mBACPkB,QAASL,EAAO,KAAOA,EAAO,GAAMM,GAAWF,EAASpL,YAAYsL,EAAQP,EAAKzD,EAAEC,MACnFsD,MAAO,4BAAeE,EAAKF,QAC1B,CACD,wBAAWE,EAAKX,OAAQ,YACvB,GAEL,IAAImB,EAAuBlB,EAAYI,EAAW,CAAC,CAAC,SAAUK,KC7kBxDU,G,UAA0BC,6BAAiB,MAC3CC,EAA0BD,6BAAiB,KAC3CE,EAA0BF,6BAAiB,KAC3CG,EAA0BH,6BAAiB,KAC3CI,EAA0BJ,6BAAiB,KAKrBK,+BAAiB,CAC3CC,MAD2C,SACrCC,GAIR,OAAO,SAACjB,EAAUC,GAChB,OAAQiB,yBAAcC,yBAAaC,mBAAOC,GAAa,CAAEvB,MAAO,CAAC,OAAS,UAAY,CACpFrL,QAAS6M,sBAAS,iBAAM,CACtBC,yBAAaH,mBAAOI,GAAO,CACzB,WAAY,KACZpC,MAAO,QACN,CACD3K,QAAS6M,sBAAS,iBAAM,CACtBb,MAEFlE,EAAG,IAELgF,yBAAaH,mBAAOI,GAAO,KAAM,CAC/B/M,QAAS6M,sBAAS,iBAAM,CACtBC,yBAAaH,mBAAOC,GAAa,CAAEhN,WAAY,IAAM,CACnDI,QAAS6M,sBAAS,iBAAM,CACtBC,yBAAaH,mBAAOI,GAAO,CAAEpC,MAAO,SAAW,CAC7C3K,QAAS6M,sBAAS,iBAAM,CACtBX,MAEFpE,EAAG,IAELgF,yBAAaH,mBAAOI,GAAO,CAAEpC,MAAO,SAAW,CAC7C3K,QAAS6M,sBAAS,iBAAM,CACtBV,MAEFrE,EAAG,IAELgF,yBAAaH,mBAAOI,GAAO,CAAEpC,MAAO,SAAW,CAC7C3K,QAAS6M,sBAAS,iBAAM,CACtBT,MAEFtE,EAAG,QAGPA,EAAG,QAGPA,EAAG,IAELgF,yBAAaH,mBAAOI,GAAO,CAAEpC,MAAO,SAAW,CAC7C3K,QAAS6M,sBAAS,iBAAM,CACtBR,MAEFvE,EAAG,QAGPA,EAAG,Q,iCC3DP,MAAMkF,EAA2B,IAAgB,EAAQ,CAAC,CAAC,YAAY,qBAExD,gB,6DCRf,W","file":"js/chunk-3baa9536.ead11f6c.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nimport { h, openBlock, createElementBlock, normalizeStyle, renderSlot } from \"vue\";\nvar splitpanes_vue_vue_type_style_index_0_lang = \"\";\nconst _sfc_main$1 = {\n  name: \"splitpanes\",\n  emits: [\"ready\", \"resize\", \"resized\", \"pane-click\", \"pane-maximize\", \"pane-add\", \"pane-remove\", \"splitter-click\"],\n  props: {\n    horizontal: { type: Boolean },\n    pushOtherPanes: { type: Boolean, default: true },\n    dblClickSplitter: { type: Boolean, default: true },\n    rtl: { type: Boolean, default: false },\n    firstSplitter: { type: Boolean }\n  },\n  provide() {\n    return {\n      requestUpdate: this.requestUpdate,\n      onPaneAdd: this.onPaneAdd,\n      onPaneRemove: this.onPaneRemove,\n      onPaneClick: this.onPaneClick\n    };\n  },\n  data: () => ({\n    container: null,\n    ready: false,\n    panes: [],\n    touch: {\n      mouseDown: false,\n      dragging: false,\n      activeSplitter: null\n    },\n    splitterTaps: {\n      splitter: null,\n      timeoutId: null\n    }\n  }),\n  computed: {\n    panesCount() {\n      return this.panes.length;\n    },\n    indexedPanes() {\n      return this.panes.reduce((obj, pane2) => (obj[pane2.id] = pane2) && obj, {});\n    }\n  },\n  methods: {\n    updatePaneComponents() {\n      this.panes.forEach((pane2) => {\n        pane2.update && pane2.update({\n          [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[pane2.id].size}%`\n        });\n      });\n    },\n    bindEvents() {\n      document.addEventListener(\"mousemove\", this.onMouseMove, { passive: false });\n      document.addEventListener(\"mouseup\", this.onMouseUp);\n      if (\"ontouchstart\" in window) {\n        document.addEventListener(\"touchmove\", this.onMouseMove, { passive: false });\n        document.addEventListener(\"touchend\", this.onMouseUp);\n      }\n    },\n    unbindEvents() {\n      document.removeEventListener(\"mousemove\", this.onMouseMove, { passive: false });\n      document.removeEventListener(\"mouseup\", this.onMouseUp);\n      if (\"ontouchstart\" in window) {\n        document.removeEventListener(\"touchmove\", this.onMouseMove, { passive: false });\n        document.removeEventListener(\"touchend\", this.onMouseUp);\n      }\n    },\n    onMouseDown(event, splitterIndex) {\n      this.bindEvents();\n      this.touch.mouseDown = true;\n      this.touch.activeSplitter = splitterIndex;\n    },\n    onMouseMove(event) {\n      if (this.touch.mouseDown) {\n        event.preventDefault();\n        this.touch.dragging = true;\n        this.calculatePanesSize(this.getCurrentMouseDrag(event));\n        this.$emit(\"resize\", this.panes.map((pane2) => ({ min: pane2.min, max: pane2.max, size: pane2.size })));\n      }\n    },\n    onMouseUp() {\n      if (this.touch.dragging) {\n        this.$emit(\"resized\", this.panes.map((pane2) => ({ min: pane2.min, max: pane2.max, size: pane2.size })));\n      }\n      this.touch.mouseDown = false;\n      setTimeout(() => {\n        this.touch.dragging = false;\n        this.unbindEvents();\n      }, 100);\n    },\n    onSplitterClick(event, splitterIndex) {\n      if (\"ontouchstart\" in window) {\n        event.preventDefault();\n        if (this.dblClickSplitter) {\n          if (this.splitterTaps.splitter === splitterIndex) {\n            clearTimeout(this.splitterTaps.timeoutId);\n            this.splitterTaps.timeoutId = null;\n            this.onSplitterDblClick(event, splitterIndex);\n            this.splitterTaps.splitter = null;\n          } else {\n            this.splitterTaps.splitter = splitterIndex;\n            this.splitterTaps.timeoutId = setTimeout(() => {\n              this.splitterTaps.splitter = null;\n            }, 500);\n          }\n        }\n      }\n      if (!this.touch.dragging)\n        this.$emit(\"splitter-click\", this.panes[splitterIndex]);\n    },\n    onSplitterDblClick(event, splitterIndex) {\n      let totalMinSizes = 0;\n      this.panes = this.panes.map((pane2, i) => {\n        pane2.size = i === splitterIndex ? pane2.max : pane2.min;\n        if (i !== splitterIndex)\n          totalMinSizes += pane2.min;\n        return pane2;\n      });\n      this.panes[splitterIndex].size -= totalMinSizes;\n      this.$emit(\"pane-maximize\", this.panes[splitterIndex]);\n    },\n    onPaneClick(event, paneId) {\n      this.$emit(\"pane-click\", this.indexedPanes[paneId]);\n    },\n    getCurrentMouseDrag(event) {\n      const rect = this.container.getBoundingClientRect();\n      const { clientX, clientY } = \"ontouchstart\" in window && event.touches ? event.touches[0] : event;\n      return {\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n    },\n    getCurrentDragPercentage(drag) {\n      drag = drag[this.horizontal ? \"y\" : \"x\"];\n      const containerSize = this.container[this.horizontal ? \"clientHeight\" : \"clientWidth\"];\n      if (this.rtl && !this.horizontal)\n        drag = containerSize - drag;\n      return drag * 100 / containerSize;\n    },\n    calculatePanesSize(drag) {\n      const splitterIndex = this.touch.activeSplitter;\n      let sums = {\n        prevPanesSize: this.sumPrevPanesSize(splitterIndex),\n        nextPanesSize: this.sumNextPanesSize(splitterIndex),\n        prevReachedMinPanes: 0,\n        nextReachedMinPanes: 0\n      };\n      const minDrag = 0 + (this.pushOtherPanes ? 0 : sums.prevPanesSize);\n      const maxDrag = 100 - (this.pushOtherPanes ? 0 : sums.nextPanesSize);\n      const dragPercentage = Math.max(Math.min(this.getCurrentDragPercentage(drag), maxDrag), minDrag);\n      let panesToResize = [splitterIndex, splitterIndex + 1];\n      let paneBefore = this.panes[panesToResize[0]] || null;\n      let paneAfter = this.panes[panesToResize[1]] || null;\n      const paneBeforeMaxReached = paneBefore.max < 100 && dragPercentage >= paneBefore.max + sums.prevPanesSize;\n      const paneAfterMaxReached = paneAfter.max < 100 && dragPercentage <= 100 - (paneAfter.max + this.sumNextPanesSize(splitterIndex + 1));\n      if (paneBeforeMaxReached || paneAfterMaxReached) {\n        if (paneBeforeMaxReached) {\n          paneBefore.size = paneBefore.max;\n          paneAfter.size = Math.max(100 - paneBefore.max - sums.prevPanesSize - sums.nextPanesSize, 0);\n        } else {\n          paneBefore.size = Math.max(100 - paneAfter.max - sums.prevPanesSize - this.sumNextPanesSize(splitterIndex + 1), 0);\n          paneAfter.size = paneAfter.max;\n        }\n        return;\n      }\n      if (this.pushOtherPanes) {\n        const vars = this.doPushOtherPanes(sums, dragPercentage);\n        if (!vars)\n          return;\n        ({ sums, panesToResize } = vars);\n        paneBefore = this.panes[panesToResize[0]] || null;\n        paneAfter = this.panes[panesToResize[1]] || null;\n      }\n      if (paneBefore !== null) {\n        paneBefore.size = Math.min(Math.max(dragPercentage - sums.prevPanesSize - sums.prevReachedMinPanes, paneBefore.min), paneBefore.max);\n      }\n      if (paneAfter !== null) {\n        paneAfter.size = Math.min(Math.max(100 - dragPercentage - sums.nextPanesSize - sums.nextReachedMinPanes, paneAfter.min), paneAfter.max);\n      }\n    },\n    doPushOtherPanes(sums, dragPercentage) {\n      const splitterIndex = this.touch.activeSplitter;\n      const panesToResize = [splitterIndex, splitterIndex + 1];\n      if (dragPercentage < sums.prevPanesSize + this.panes[panesToResize[0]].min) {\n        panesToResize[0] = this.findPrevExpandedPane(splitterIndex).index;\n        sums.prevReachedMinPanes = 0;\n        if (panesToResize[0] < splitterIndex) {\n          this.panes.forEach((pane2, i) => {\n            if (i > panesToResize[0] && i <= splitterIndex) {\n              pane2.size = pane2.min;\n              sums.prevReachedMinPanes += pane2.min;\n            }\n          });\n        }\n        sums.prevPanesSize = this.sumPrevPanesSize(panesToResize[0]);\n        if (panesToResize[0] === void 0) {\n          sums.prevReachedMinPanes = 0;\n          this.panes[0].size = this.panes[0].min;\n          this.panes.forEach((pane2, i) => {\n            if (i > 0 && i <= splitterIndex) {\n              pane2.size = pane2.min;\n              sums.prevReachedMinPanes += pane2.min;\n            }\n          });\n          this.panes[panesToResize[1]].size = 100 - sums.prevReachedMinPanes - this.panes[0].min - sums.prevPanesSize - sums.nextPanesSize;\n          return null;\n        }\n      }\n      if (dragPercentage > 100 - sums.nextPanesSize - this.panes[panesToResize[1]].min) {\n        panesToResize[1] = this.findNextExpandedPane(splitterIndex).index;\n        sums.nextReachedMinPanes = 0;\n        if (panesToResize[1] > splitterIndex + 1) {\n          this.panes.forEach((pane2, i) => {\n            if (i > splitterIndex && i < panesToResize[1]) {\n              pane2.size = pane2.min;\n              sums.nextReachedMinPanes += pane2.min;\n            }\n          });\n        }\n        sums.nextPanesSize = this.sumNextPanesSize(panesToResize[1] - 1);\n        if (panesToResize[1] === void 0) {\n          sums.nextReachedMinPanes = 0;\n          this.panes[this.panesCount - 1].size = this.panes[this.panesCount - 1].min;\n          this.panes.forEach((pane2, i) => {\n            if (i < this.panesCount - 1 && i >= splitterIndex + 1) {\n              pane2.size = pane2.min;\n              sums.nextReachedMinPanes += pane2.min;\n            }\n          });\n          this.panes[panesToResize[0]].size = 100 - sums.prevPanesSize - sums.nextReachedMinPanes - this.panes[this.panesCount - 1].min - sums.nextPanesSize;\n          return null;\n        }\n      }\n      return { sums, panesToResize };\n    },\n    sumPrevPanesSize(splitterIndex) {\n      return this.panes.reduce((total, pane2, i) => total + (i < splitterIndex ? pane2.size : 0), 0);\n    },\n    sumNextPanesSize(splitterIndex) {\n      return this.panes.reduce((total, pane2, i) => total + (i > splitterIndex + 1 ? pane2.size : 0), 0);\n    },\n    findPrevExpandedPane(splitterIndex) {\n      const pane2 = [...this.panes].reverse().find((p) => p.index < splitterIndex && p.size > p.min);\n      return pane2 || {};\n    },\n    findNextExpandedPane(splitterIndex) {\n      const pane2 = this.panes.find((p) => p.index > splitterIndex + 1 && p.size > p.min);\n      return pane2 || {};\n    },\n    checkSplitpanesNodes() {\n      const children = Array.from(this.container.children);\n      children.forEach((child) => {\n        const isPane = child.classList.contains(\"splitpanes__pane\");\n        const isSplitter = child.classList.contains(\"splitpanes__splitter\");\n        if (!isPane && !isSplitter) {\n          child.parentNode.removeChild(child);\n          console.warn(\"Splitpanes: Only <pane> elements are allowed at the root of <splitpanes>. One of your DOM nodes was removed.\");\n          return;\n        }\n      });\n    },\n    addSplitter(paneIndex, nextPaneNode, isVeryFirst = false) {\n      const splitterIndex = paneIndex - 1;\n      const elm = document.createElement(\"div\");\n      elm.classList.add(\"splitpanes__splitter\");\n      if (!isVeryFirst) {\n        elm.onmousedown = (event) => this.onMouseDown(event, splitterIndex);\n        if (typeof window !== \"undefined\" && \"ontouchstart\" in window) {\n          elm.ontouchstart = (event) => this.onMouseDown(event, splitterIndex);\n        }\n        elm.onclick = (event) => this.onSplitterClick(event, splitterIndex + 1);\n      }\n      if (this.dblClickSplitter) {\n        elm.ondblclick = (event) => this.onSplitterDblClick(event, splitterIndex + 1);\n      }\n      nextPaneNode.parentNode.insertBefore(elm, nextPaneNode);\n    },\n    removeSplitter(node) {\n      node.onmousedown = void 0;\n      node.onclick = void 0;\n      node.ondblclick = void 0;\n      node.parentNode.removeChild(node);\n    },\n    redoSplitters() {\n      const children = Array.from(this.container.children);\n      children.forEach((el) => {\n        if (el.className.includes(\"splitpanes__splitter\"))\n          this.removeSplitter(el);\n      });\n      let paneIndex = 0;\n      children.forEach((el) => {\n        if (el.className.includes(\"splitpanes__pane\")) {\n          if (!paneIndex && this.firstSplitter)\n            this.addSplitter(paneIndex, el, true);\n          else if (paneIndex)\n            this.addSplitter(paneIndex, el);\n          paneIndex++;\n        }\n      });\n    },\n    requestUpdate(_a) {\n      var _b = _a, { target } = _b, args = __objRest(_b, [\"target\"]);\n      const pane2 = this.indexedPanes[target._.uid];\n      Object.entries(args).forEach(([key, value]) => pane2[key] = value);\n    },\n    onPaneAdd(pane2) {\n      let index = -1;\n      Array.from(pane2.$el.parentNode.children).some((el) => {\n        if (el.className.includes(\"splitpanes__pane\"))\n          index++;\n        return el === pane2.$el;\n      });\n      const min = parseFloat(pane2.minSize);\n      const max = parseFloat(pane2.maxSize);\n      this.panes.splice(index, 0, {\n        id: pane2._.uid,\n        index,\n        min: isNaN(min) ? 0 : min,\n        max: isNaN(max) ? 100 : max,\n        size: pane2.size === null ? null : parseFloat(pane2.size),\n        givenSize: pane2.size,\n        update: pane2.update\n      });\n      this.panes.forEach((p, i) => p.index = i);\n      if (this.ready) {\n        this.$nextTick(() => {\n          this.redoSplitters();\n          this.resetPaneSizes({ addedPane: this.panes[index] });\n          this.$emit(\"pane-add\", { index, panes: this.panes.map((pane3) => ({ min: pane3.min, max: pane3.max, size: pane3.size })) });\n        });\n      }\n    },\n    onPaneRemove(pane2) {\n      const index = this.panes.findIndex((p) => p.id === pane2._.uid);\n      const removed = this.panes.splice(index, 1)[0];\n      this.panes.forEach((p, i) => p.index = i);\n      this.$nextTick(() => {\n        this.redoSplitters();\n        this.resetPaneSizes({ removedPane: __spreadProps(__spreadValues({}, removed), { index }) });\n        this.$emit(\"pane-remove\", { removed, panes: this.panes.map((pane3) => ({ min: pane3.min, max: pane3.max, size: pane3.size })) });\n      });\n    },\n    resetPaneSizes(changedPanes = {}) {\n      if (!changedPanes.addedPane && !changedPanes.removedPane)\n        this.initialPanesSizing();\n      else if (this.panes.some((pane2) => pane2.givenSize !== null || pane2.min || pane2.max < 100))\n        this.equalizeAfterAddOrRemove(changedPanes);\n      else\n        this.equalize();\n      if (this.ready)\n        this.$emit(\"resized\", this.panes.map((pane2) => ({ min: pane2.min, max: pane2.max, size: pane2.size })));\n    },\n    equalize() {\n      const equalSpace = 100 / this.panesCount;\n      let leftToAllocate = 0;\n      let ungrowable = [];\n      let unshrinkable = [];\n      this.panes.forEach((pane2) => {\n        pane2.size = Math.max(Math.min(equalSpace, pane2.max), pane2.min);\n        leftToAllocate -= pane2.size;\n        if (pane2.size >= pane2.max)\n          ungrowable.push(pane2.id);\n        if (pane2.size <= pane2.min)\n          unshrinkable.push(pane2.id);\n      });\n      if (leftToAllocate > 0.1)\n        this.readjustSizes(leftToAllocate, ungrowable, unshrinkable);\n    },\n    initialPanesSizing() {\n      100 / this.panesCount;\n      let leftToAllocate = 100;\n      let ungrowable = [];\n      let unshrinkable = [];\n      let definedSizes = 0;\n      this.panes.forEach((pane2) => {\n        leftToAllocate -= pane2.size;\n        if (pane2.size !== null)\n          definedSizes++;\n        if (pane2.size >= pane2.max)\n          ungrowable.push(pane2.id);\n        if (pane2.size <= pane2.min)\n          unshrinkable.push(pane2.id);\n      });\n      let leftToAllocate2 = 100;\n      if (leftToAllocate > 0.1) {\n        this.panes.forEach((pane2) => {\n          if (pane2.size === null) {\n            pane2.size = Math.max(Math.min(leftToAllocate / (this.panesCount - definedSizes), pane2.max), pane2.min);\n          }\n          leftToAllocate2 -= pane2.size;\n        });\n        if (leftToAllocate2 > 0.1)\n          this.readjustSizes(leftToAllocate, ungrowable, unshrinkable);\n      }\n    },\n    equalizeAfterAddOrRemove({ addedPane, removedPane } = {}) {\n      let equalSpace = 100 / this.panesCount;\n      let leftToAllocate = 0;\n      let ungrowable = [];\n      let unshrinkable = [];\n      if (addedPane && addedPane.givenSize !== null) {\n        equalSpace = (100 - addedPane.givenSize) / (this.panesCount - 1);\n      }\n      this.panes.forEach((pane2) => {\n        leftToAllocate -= pane2.size;\n        if (pane2.size >= pane2.max)\n          ungrowable.push(pane2.id);\n        if (pane2.size <= pane2.min)\n          unshrinkable.push(pane2.id);\n      });\n      if (Math.abs(leftToAllocate) < 0.1)\n        return;\n      this.panes.forEach((pane2) => {\n        if (addedPane && addedPane.givenSize !== null && addedPane.id === pane2.id)\n          ;\n        else\n          pane2.size = Math.max(Math.min(equalSpace, pane2.max), pane2.min);\n        leftToAllocate -= pane2.size;\n        if (pane2.size >= pane2.max)\n          ungrowable.push(pane2.id);\n        if (pane2.size <= pane2.min)\n          unshrinkable.push(pane2.id);\n      });\n      if (leftToAllocate > 0.1)\n        this.readjustSizes(leftToAllocate, ungrowable, unshrinkable);\n    },\n    readjustSizes(leftToAllocate, ungrowable, unshrinkable) {\n      let equalSpaceToAllocate;\n      if (leftToAllocate > 0)\n        equalSpaceToAllocate = leftToAllocate / (this.panesCount - ungrowable.length);\n      else\n        equalSpaceToAllocate = leftToAllocate / (this.panesCount - unshrinkable.length);\n      this.panes.forEach((pane2, i) => {\n        if (leftToAllocate > 0 && !ungrowable.includes(pane2.id)) {\n          const newPaneSize = Math.max(Math.min(pane2.size + equalSpaceToAllocate, pane2.max), pane2.min);\n          const allocated = newPaneSize - pane2.size;\n          leftToAllocate -= allocated;\n          pane2.size = newPaneSize;\n        } else if (!unshrinkable.includes(pane2.id)) {\n          const newPaneSize = Math.max(Math.min(pane2.size + equalSpaceToAllocate, pane2.max), pane2.min);\n          const allocated = newPaneSize - pane2.size;\n          leftToAllocate -= allocated;\n          pane2.size = newPaneSize;\n        }\n        pane2.update({\n          [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[pane2.id].size}%`\n        });\n      });\n      if (Math.abs(leftToAllocate) > 0.1) {\n        this.$nextTick(() => {\n          if (this.ready) {\n            console.warn(\"Splitpanes: Could not resize panes correctly due to their constraints.\");\n          }\n        });\n      }\n    }\n  },\n  watch: {\n    panes: {\n      deep: true,\n      immediate: false,\n      handler() {\n        this.updatePaneComponents();\n      }\n    },\n    horizontal() {\n      this.updatePaneComponents();\n    },\n    firstSplitter() {\n      this.redoSplitters();\n    },\n    dblClickSplitter(enable) {\n      const splitters = [...this.container.querySelectorAll(\".splitpanes__splitter\")];\n      splitters.forEach((splitter, i) => {\n        splitter.ondblclick = enable ? (event) => this.onSplitterDblClick(event, i) : void 0;\n      });\n    }\n  },\n  beforeUnmount() {\n    this.ready = false;\n  },\n  mounted() {\n    this.container = this.$refs.container;\n    this.checkSplitpanesNodes();\n    this.redoSplitters();\n    this.resetPaneSizes();\n    this.$emit(\"ready\");\n    this.ready = true;\n  },\n  render() {\n    return h(\"div\", {\n      ref: \"container\",\n      class: [\n        \"splitpanes\",\n        `splitpanes--${this.horizontal ? \"horizontal\" : \"vertical\"}`,\n        {\n          \"splitpanes--dragging\": this.touch.dragging\n        }\n      ]\n    }, this.$slots.default());\n  }\n};\nvar _export_sfc = (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n};\nconst _sfc_main = {\n  name: \"pane\",\n  inject: [\"requestUpdate\", \"onPaneAdd\", \"onPaneRemove\", \"onPaneClick\"],\n  props: {\n    size: { type: [Number, String], default: null },\n    minSize: { type: [Number, String], default: 0 },\n    maxSize: { type: [Number, String], default: 100 }\n  },\n  data: () => ({\n    style: {}\n  }),\n  mounted() {\n    this.onPaneAdd(this);\n  },\n  beforeUnmount() {\n    this.onPaneRemove(this);\n  },\n  methods: {\n    update(style) {\n      this.style = style;\n    }\n  },\n  computed: {\n    sizeNumber() {\n      return this.size || this.size === 0 ? parseFloat(this.size) : null;\n    },\n    minSizeNumber() {\n      return parseFloat(this.minSize);\n    },\n    maxSizeNumber() {\n      return parseFloat(this.maxSize);\n    }\n  },\n  watch: {\n    sizeNumber(size) {\n      this.requestUpdate({ target: this, size });\n    },\n    minSizeNumber(min) {\n      this.requestUpdate({ target: this, min });\n    },\n    maxSizeNumber(max) {\n      this.requestUpdate({ target: this, max });\n    }\n  }\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: \"splitpanes__pane\",\n    onClick: _cache[0] || (_cache[0] = ($event) => $options.onPaneClick($event, _ctx._.uid)),\n    style: normalizeStyle(_ctx.style)\n  }, [\n    renderSlot(_ctx.$slots, \"default\")\n  ], 4);\n}\nvar pane = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { pane as Pane, _sfc_main$1 as Splitpanes };\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-23371f36\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"1\")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"2\")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"3\")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"4\")\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"5\")\n\nimport { Splitpanes, Pane } from 'splitpanes'\r\n  import 'splitpanes/dist/splitpanes.css'\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\r\n  // 参考文档 https://antoniandre.github.io/splitpanes/\r\n  \nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(Splitpanes), { style: {\"height\":\"800px\"} }, {\n    default: _withCtx(() => [\n      _createVNode(_unref(Pane), {\n        \"min-size\": \"20\",\n        class: \"left\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_1\n        ]),\n        _: 1\n      }),\n      _createVNode(_unref(Pane), null, {\n        default: _withCtx(() => [\n          _createVNode(_unref(Splitpanes), { horizontal: \"\" }, {\n            default: _withCtx(() => [\n              _createVNode(_unref(Pane), { class: \"item1\" }, {\n                default: _withCtx(() => [\n                  _hoisted_2\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(Pane), { class: \"item2\" }, {\n                default: _withCtx(() => [\n                  _hoisted_3\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(Pane), { class: \"item3\" }, {\n                default: _withCtx(() => [\n                  _hoisted_4\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_unref(Pane), { class: \"item4\" }, {\n        default: _withCtx(() => [\n          _hoisted_5\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./splitpane.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./splitpane.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./splitpane.vue?vue&type=style&index=0&id=23371f36&scoped=true&lang=scss\"\n\nimport exportComponent from \"F:\\\\2022\\\\cloude\\\\vue-admin-plus\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-23371f36\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./splitpane.vue?vue&type=style&index=0&id=23371f36&scoped=true&lang=scss\""],"sourceRoot":""}